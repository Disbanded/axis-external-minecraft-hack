
#include "axis/axis.h"
#include "pscanner/scanner.h"

int main() {

    if (!axis::_open_mc()) {

        for (
        printf("couldn't open minecraft process.\n"); 
        !axis::_is_pressed(0xd); Sleep(50.0));
        
        return 0;

    }

    for (axis::_get_ver(); !axis::mc_version;) {

        for (
        printf("not supported minecraft version.\n");
        !axis::_is_pressed(0xd); Sleep(50.0));

        return 0;

    }

    for (axis::mc_c_ptr = scanner::pattern(0x100000000, 0x1ffffffff, {

        RAND, 0x01, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, RAND, 0x00, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, 0x00, 0x01, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND,
        0x28, 0x0F, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, RAND, 0x00, 0x00, 0x00, 0x00,
        0x28, 0x0F, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, RAND, 0x01, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, RAND, 0x01, 0x00, 0x00, 0x00,
        RAND, RAND, RAND, RAND, RAND, 0x00, 0x00, 0x00,
        0x01, RAND, RAND, RAND, RAND, RAND, RAND, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, RAND, RAND, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00

    }) + 0x60; axis::mc_c_ptr <= 0x100;) {

        for (
        printf("not supported minecraft version.\n");
        !axis::_is_pressed(0xd); Sleep(50.0));

        return 0;

    }

    for (
        printf("succesfully loaded.\n"), 
        axis::_thread(axis::_handler);; Sleep(100.0)) {




    }

    return 0;

}
